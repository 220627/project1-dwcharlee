/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceCompatibility = 17
targetCompatibility = 17

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

   	//we need a postgresql dependency
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'

	implementation group: 'io.javalin', name: 'javalin', version: '3.13.3'
    implementation "org.slf4j:slf4j-simple:1.7.30" //we had to add this according to the console

	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
 
 	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
 	
 	testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.3.1'
    
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
